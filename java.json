{
  "rules": [
    {
      "id": "CipherGetInstance",
      "brief_description": "Default ECB mode should not be used",
      "inspector": {
        "pattern": "Cipher.getInstance\\((.*?)\\)",
        "group_patterns": [
          "(.*AES[^\\/].*)"
        ]
      },
      "fixes": [
        {
          "name": "Improve security by using AES/GCM/NoPadding",
          "patterns": [
            "(.*AES[^\\/].*)"
          ],
          "strings": [
            "AES/GCM/NoPadding"
          ]
        }
      ],
      "highlight_type": "WARNING"
    },
    {
      "id": "SensitiveDataLoggingW",
      "brief_description": "Sensitive data may be logged",
      "inspector": {
        "pattern": "Log.w\\((.*?)\\)",
        "group_patterns": [
          "(.*pass.*)|(.*pw.*)"
        ]
      },
      "fixes": [],
      "highlight_type": "WARNING"
    },
    {
      "id": "SensitiveDataLoggingD",
      "brief_description": "Sensitive data may be logged",
      "inspector": {
        "pattern": "Log.d\\((.*?)\\)",
        "group_patterns": [
          "(.*pass.*)|(.*pw.*)"
        ]
      },
      "fixes": [],
      "highlight_type": "WARNING"
    },
    {
      "id": "SensitiveDataLoggingE",
      "brief_description": "Sensitive data may be logged",
      "inspector": {
        "pattern": "Log.e\\((.*?)\\)",
        "group_patterns": [
          "(.*pass.*)|(.*pw.*)"
        ]
      },
      "fixes": [],
      "highlight_type": "WARNING"
    },
    {
      "id": "SensitiveDataLoggingI",
      "brief_description": "Sensitive data may be logged",
      "inspector": {
        "pattern": "Log.i\\((.*?)\\)",
        "group_patterns": [
          "(.*pass.*)|(.*pw.*)"
        ]
      },
      "fixes": [],
      "highlight_type": "WARNING"
    },
    {
      "id": "SensitiveDataLoggingV",
      "brief_description": "Sensitive data may be logged",
      "inspector": {
        "pattern": "Log.v\\((.*?)\\)",
        "group_patterns": [
          "(.*pass.*)|(.*pw.*)"
        ]
      },
      "fixes": [],
      "highlight_type": "WARNING"
    },
    {
      "id": "KeyPairInit",
      "brief_description": "Cryptographic keys should be robust",
      "inspector": {
        "pattern": "KeyPairGenerator.initialize\\((.*?)\\)",
        "group_patterns": [
          "(1024)"
        ]
      },
      "fixes": [
        {
          "name": "Improve security",
          "patterns": [
            "(1024)"
          ],
          "strings": [
            "2048"
          ]
        }
      ],
      "highlight_type": "WARNING"
    },
    {
      "id": "KeyInit",
      "brief_description": "Cryptographic keys should be robust",
      "inspector": {
        "pattern": "KeyGenerator.init\\((.*?)\\)",
        "group_patterns": [
          "(64)"
        ]
      },
      "fixes": [
        {
          "name": "Improve security",
          "patterns": [
            "(64)"
          ],
          "strings": [
            "128"
          ]
        }
      ],
      "highlight_type": "WARNING"
    },
    {
      "id": "ECGenParameterSpec",
      "brief_description": "Cryptographic keys should be robust",
      "inspector": {
        "pattern": "ECGenParameterSpec\\((.*?)\\)",
        "group_patterns": [
          "(secp112r1)"
        ]
      },
      "fixes": [
        {
          "name": "Improve security",
          "patterns": [
            "(secp112r1)"
          ],
          "strings": [
            "secp224k1"
          ]
        }
      ],
      "highlight_type": "WARNING"
    },
    {
      "id": "DriverManagerGetConnection",
      "brief_description": "A secure password should be used when connecting to a database",
      "inspector": {
        "pattern": "DriverManager.getConnect\\((.*?),(.*?),(.*?)\\)",
        "group_patterns": [
          null,
          null,
          "()"
        ]
      },
      "fixes": [],
      "highlight_type": "WARNING"
    },
    {
      "id": "PredictableRandom",
      "brief_description": "Predictable pseudorandom number generator",
      "inspector": {
        "pattern": "new Random()",
        "group_patterns": []
      },
      "fixes": [
        {
          "name": "Use SecureRandom",
          "patterns": [
            "Random"
          ],
          "strings": [
            "SecureRandom"
          ]
        }
      ],
      "highlight_type": "WARNING"
    },
    {
      "id": "MessageDigest",
      "brief_description": "SHA-1 and Message-Digest hash algorithms should not be used in secure contexts",
      "inspector": {
        "pattern": "MessageDigest.getInstance\\((.*?)\\)",
        "group_patterns": [
          "\"SHA1\""
        ]
      },
      "fixes": [
        {
          "name": "Improve security by using SHA256",
          "patterns": [
            "SHA1"
          ],
          "strings": [
            "SHA256"
          ]
        }
      ],
      "highlight_type": "WARNING"
    }
  ]
}